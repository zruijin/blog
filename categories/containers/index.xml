<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Containers on Jimmy Song</title>
    <link>https://jimmysong.io/categories/containers/</link>
    <description>Recent content in Containers on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <managingEditor>rootsongjc@gmail.com (Jimmy Song)</managingEditor>
    <webMaster>rootsongjc@gmail.com (Jimmy Song)</webMaster>
    <lastBuildDate>Tue, 04 Apr 2017 00:19:04 +0800</lastBuildDate>
    
	<atom:link href="https://jimmysong.io/categories/containers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>容器技术在大数据场景下的应用——Yarn on Docker</title>
      <link>https://jimmysong.io/posts/yarn-on-docker/</link>
      <pubDate>Tue, 04 Apr 2017 00:19:04 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/yarn-on-docker/</guid>
      <description>作者：宋净超 TalkingData云计算及大数据工程师 前言 我已就该话题已在2016年上海Qcon上发表过演讲，点此观看。 另外InfoQ网站上</description>
    </item>
    
    <item>
      <title>容器的应用场景</title>
      <link>https://jimmysong.io/posts/container-applications-scenarios/</link>
      <pubDate>Thu, 23 Mar 2017 15:26:11 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/container-applications-scenarios/</guid>
      <description>（题图：深圳大梅沙 Aug 1,2014） 如果你对容器到底有什么用存在疑惑的话，推荐你看下我今天碰到的一篇阿里云的容器服务-产品简介-应用场景的文章</description>
    </item>
    
    <item>
      <title>Docker源码分析第一篇——代码结构</title>
      <link>https://jimmysong.io/posts/docker-source-code-analysis-code-structure/</link>
      <pubDate>Sun, 19 Mar 2017 23:00:29 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-source-code-analysis-code-structure/</guid>
      <description>(题图：北京八达岭长城 Oct 1,2015) 前言 之前陆陆续续看过一点docker的源码，都未成体系，最近在研究Docker-17.03-CE，趁此机会研究下d</description>
    </item>
    
    <item>
      <title>Contiv Ultimate-Docker17.03CE下思科docker网络插件contiv趟坑终极版</title>
      <link>https://jimmysong.io/posts/contiv-ultimate/</link>
      <pubDate>Fri, 17 Mar 2017 17:52:37 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-ultimate/</guid>
      <description>（题图：广州石牌桥 Aug 10,2014） 前几天写的几篇关于Contiv的文章已经把引入坑了😂 今天这篇文章将带领大家用正确的姿势编译和打包一个co</description>
    </item>
    
    <item>
      <title>Docker17.03-CE插件开发案例</title>
      <link>https://jimmysong.io/posts/docker-plugin-develop/</link>
      <pubDate>Wed, 15 Mar 2017 13:57:26 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-plugin-develop/</guid>
      <description>（题图：杭州吴山步道旁的墙壁 Oct 16,2016） 当你看到这篇文章时，如果你也正在进行docker1.13+版本下的plugin开发，恭喜你也入</description>
    </item>
    
    <item>
      <title>Docker 17.03-CE create plugin源码解析</title>
      <link>https://jimmysong.io/posts/docker-create-plugin/</link>
      <pubDate>Wed, 15 Mar 2017 12:09:26 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-create-plugin/</guid>
      <description>（题图：故宫 Apr 3,2016） 继续上一篇Docker17.03-CE插件开发的🌰，今天来看下docker create plugin的源码。 cli/command/plugin/create.go Docker命</description>
    </item>
    
    <item>
      <title>Docker v.s Kubernetes part2</title>
      <link>https://jimmysong.io/posts/docker-vs-kubernetes-part2/</link>
      <pubDate>Fri, 10 Mar 2017 22:06:32 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-vs-kubernetes-part2/</guid>
      <description>（题图：河北承德兴隆县雾灵山京郊最佳星空拍摄点 July 9,2016) 本文是Docker v.s Kubernetes第二篇，续接上文Docker v.s Kuberntes Part1。 Kub</description>
    </item>
    
    <item>
      <title>Docker v.s Kubernetes part1</title>
      <link>https://jimmysong.io/posts/docker-vs-kubernetes-part1/</link>
      <pubDate>Fri, 10 Mar 2017 21:09:47 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-vs-kubernetes-part1/</guid>
      <description>（题图：杭州西湖 Oct 16,2016） 前言 这一系列文章是对比kubernetes 和docker两者之间的差异，鉴于我之前从docker1.10.</description>
    </item>
    
    <item>
      <title>Contiv入坑指南-v2plugin</title>
      <link>https://jimmysong.io/posts/contiv-v2plugin/</link>
      <pubDate>Fri, 10 Mar 2017 11:51:09 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-v2plugin/</guid>
      <description>(题图：上海交通大学 Oct 22,2016) 继续趟昨天挖的坑。 昨天的issue-776已经得到@gkvijay的回复，原来是因为没有安装contiv/v2plu</description>
    </item>
    
    <item>
      <title>Contiv入坑指南-试用全记录</title>
      <link>https://jimmysong.io/posts/contiv-tryout/</link>
      <pubDate>Thu, 09 Mar 2017 14:23:04 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-tryout/</guid>
      <description>(题图：山东荣成滨海风力发电场 Jan 31,2017） 关于contiv的介绍请看我的上一篇文章Contiv Intro。 开发环境使用Vagrant搭</description>
    </item>
    
    <item>
      <title>思科开源docker网络插件Contiv简介</title>
      <link>https://jimmysong.io/posts/contiv-guide/</link>
      <pubDate>Thu, 09 Mar 2017 11:28:34 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-guide/</guid>
      <description>(题图：北京蓝色港湾夜景 Feb 11,2017 元宵节) Contiv是思科开发的docker网络插件，从2015年就开源了，业界通常拿它和Calico比较。貌似</description>
    </item>
    
    <item>
      <title>Docker技术选型</title>
      <link>https://jimmysong.io/posts/docker-tech-selection/</link>
      <pubDate>Wed, 08 Mar 2017 10:37:01 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-tech-selection/</guid>
      <description>回顾历史 多少次我回过头看看走过的路，你还在小村旁。 去年基于docker1.11对Hadoop yarn进行了docker化改造，详情请看大数据</description>
    </item>
    
    <item>
      <title>Docker源码编译和开发环境搭建</title>
      <link>https://jimmysong.io/posts/docker-dev-env/</link>
      <pubDate>Mon, 06 Mar 2017 17:03:19 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-dev-env/</guid>
      <description>看了下网上其他人写的docker开发环境搭建，要么是在ubuntu下搭建，要么就是使用官方说明的build docker-dev镜像的方式一步</description>
    </item>
    
    <item>
      <title>Docker Service Discovery</title>
      <link>https://jimmysong.io/posts/docker-service-discovery/</link>
      <pubDate>Mon, 27 Feb 2017 18:27:07 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-service-discovery/</guid>
      <description>Prior to Docker 1.12 release, setting up Swarm cluster needed some sort of service discovery backend. There are multiple discovery backends available like hosted discovery service, using a static file describing the cluster, etcd, consul, zookeeper or using static list of IP address.

Thanks to Docker 1.12 Swarm Mode, we don’t have to depend upon these external tools and complex configurations. Docker Engine 1.12 runs it’s own internal DNS service to route services by name.</description>
    </item>
    
    <item>
      <title>Docker内置DNS</title>
      <link>https://jimmysong.io/posts/docker-embedded-dns/</link>
      <pubDate>Mon, 27 Feb 2017 18:23:42 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-embedded-dns/</guid>
      <description>本文主要介绍了Docker容器的DNS配置及其注意点，重点对docker 1.10发布的embedded DNS server进行了源码分析，看看em</description>
    </item>
    
  </channel>
</rss>